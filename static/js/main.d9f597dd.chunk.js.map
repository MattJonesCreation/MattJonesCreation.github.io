{"version":3,"sources":["images/favicons/favicon.ico","images/daily-prayer-background.jpg","images/loan-calculator-background.jpg","images/profile.JPG","components/Project/Group.js","screens/Home/Home.js","screens/Projects/Projects.js","components/About/ImageCard.js","components/UI/Table.js","screens/About/About.js","screens/Contact/Contact.js","components/GoogleAnalytics.js","components/HomepageLayout.js","screens/Root.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","projects","header","description","href","meta","image","react_default","a","createElement","Image","src","dailyPrayerImg","loanCalculatorImg","ProjectGroup","Card","Group","items","ScreensHome","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Fragment","Helmet_default","name","content","Segment","inverted","textAlign","className","vertical","Container","text","Header","as","Grid","columns","Row","Column","Component","ScreensProjects","stackable","width","AboutImageCard","centered","profilePic","Content","Meta","Description","UITable","title","Table","unstackable","headers","map","index","HeaderCell","key","Body","rows","row","r","Cell","experienceHeaders","experienceRows","educationHeaders","educationRows","skillsHeaders","skillsRows","ScreensAbout","ImageCard","Divider","UI_Table","ScreensContact","GoogleAnalytics","logPageChange","location","pathname","search","prevLocation","_ref","_this$props$location","isDifferentPathname","isDifferentSearch","page","arguments","length","undefined","window","ReactGA","set","objectSpread","concat","origin","options","pageview","components_GoogleAnalytics","react_router","component","initialize","process","getWidth","Responsive","onlyTablet","minWidth","innerWidth","Nav","react_router_dom","assign","exact","activeClassName","Pages","Menu","Item","to","position","onClick","Icon","target","React","DesktopContainer","children","Visibility","style","padding","secondary","size","Link","logo","alt","HomepageLayout_Pages","MobileContainer","handleSidebarHide","setState","sidebarOpened","handleSidebarShow","Sidebar","Pushable","maxWidth","onlyMobile","animation","direction","onHide","visible","float","link","Pusher","dimmed","Button","ResponsiveContainer","HomepageLayout_DesktopContainer","HomepageLayout_MobileContainer","HomepageLayout","_ref2","HomepageLayout_ResponsiveContainer","divided","Date","getFullYear","ScreensRoot","GA","components_HomepageLayout","path","App","Root","Boolean","hostname","match","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d9f597dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.716ce2e8.ico\";","module.exports = __webpack_public_path__ + \"static/media/daily-prayer-background.b2d11483.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loan-calculator-background.4159e3df.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profile.c365c411.JPG\";","import React from 'react';\r\nimport { Card, Image } from 'semantic-ui-react';\r\nimport dailyPrayerImg from '../../images/daily-prayer-background.jpg';\r\nimport loanCalculatorImg from '../../images/loan-calculator-background.jpg';\r\n\r\nconst projects = [\r\n    {\r\n        header: \"Daily Prayer\",\r\n        description: \"Allows you to build a relationship with God through daily prayer.\",\r\n        href: \"https://himattjones.com/daily-prayer\",\r\n        meta: \"March 20, 2019\",\r\n        image: <Image src={dailyPrayerImg} />\r\n    },\r\n    {\r\n        header: \"Loan Calculator\",\r\n        description: \"Simple loan calculator for calculating monthly payments and interest.\",\r\n        href: \"https://himattjones.com/financial-react\", \r\n        meta: \"March 19, 2019\",\r\n        image: <Image src={loanCalculatorImg} />\r\n    }\r\n];\r\n\r\nconst ProjectGroup = () => <Card.Group items={projects} />;\r\n\r\nexport default ProjectGroup; ","import React, { Component } from 'react';\r\nimport { Grid, Container, Header, Segment } from 'semantic-ui-react';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport ProjectGroup from '../../components/Project/Group';\r\nimport './Home.css';\r\n\r\n/* eslint-disable react/no-multi-comp */\r\n/* Heads up! ScreensHome uses inline styling, however it's not the best practice. Use CSS or styled components for\r\n * such things.\r\n * @TODO: Remove the inline styling everywhere\r\n */\r\nclass ScreensHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {/* Defining the Page title, meta, description */}\r\n                <Helmet>\r\n                    <title>Matt Jones Creations - Home</title>\r\n                    <meta name=\"description\" content=\"Contains the featured projects of Software Engineer Matt Jones.\" />\r\n                    <meta name=\"subject\" content=\"Technology Portfolio\" />\r\n                </Helmet>\r\n                <Segment inverted textAlign='center' className=\"Home-segment\" vertical>\r\n                    <Container text>\r\n                        <Header\r\n                            as='h1'\r\n                            content='Matt Jones'\r\n                            inverted\r\n                            className=\"Home-h1\"\r\n                        />\r\n                        <Header\r\n                            as='h2'\r\n                            content='Full-stack software engineer, voracious learner, and obsessive builder. Always striving to improve.'\r\n                            inverted\r\n                            className=\"Home-h2\"\r\n                        />    \r\n                    </Container>\r\n                </Segment>\r\n                {/* Header Page */}\r\n                <Segment textAlign=\"center\" className=\"Home-segment\" vertical>\r\n                    <Container>\r\n                        <Grid columns={1}>\r\n                            <Grid.Row>\r\n                                <Grid.Column>\r\n                                    <Header as='h3' className=\"Home-h3\">\r\n                                        Some Of My Latest Work\r\n                                    </Header>\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                                <Grid.Column>\r\n                                    <ProjectGroup />\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Container>\r\n                </Segment>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScreensHome;","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { Grid, Segment, Container, Header } from 'semantic-ui-react';\r\n\r\nimport ProjectGroup from '../../components/Project/Group';\r\nimport './Projects.css';\r\n\r\nconst ScreensProjects = () => (\r\n    <Segment inverted vertical className=\"Projects-segment\">\r\n        {/* Defining the Page title, meta, description */}\r\n        <Helmet>\r\n            <title>Matt Jones Creations - Projects</title>\r\n            <meta name=\"description\" content=\"Contains all projects of Software Engineer Matt Jones.\" />\r\n            <meta name=\"subject\" content=\"Technology Portfolio\" />\r\n        </Helmet>\r\n        <Container>\r\n            <Grid inverted stackable>\r\n                <Grid.Row>\r\n                    <Grid.Column width={16}>\r\n                        <Header inverted as=\"h1\">Projects</Header>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <Grid.Column width={16}>\r\n                        <ProjectGroup />\r\n                    </Grid.Column>                                            \r\n                </Grid.Row>\r\n            </Grid>\r\n        </Container>\r\n    </Segment>\r\n);\r\n\r\nexport default ScreensProjects;\r\n","import React from 'react';\r\nimport { Image, Card } from 'semantic-ui-react';\r\nimport profilePic from '../../images/profile.JPG';\r\n\r\nconst AboutImageCard = () => (\r\n    <Card centered>\r\n        <Image src={profilePic} />\r\n        <Card.Content>\r\n            <Card.Header>Matt</Card.Header>\r\n            <Card.Meta>Developing Since 2012</Card.Meta>\r\n            <Card.Description>Full-stack software engineer, voracious learner, and obsessive builder.</Card.Description>\r\n        </Card.Content>\r\n    </Card>\r\n);\r\n\r\nexport default AboutImageCard;","import React from 'react';\r\nimport { Table, Header } from 'semantic-ui-react';\r\n\r\nconst UITable = (props) => (\r\n    <div>\r\n        <Header inverted as=\"h3\">{props.title}</Header>\r\n        <Table inverted unstackable>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    {props.headers.map((header, index) => {\r\n                        return (\r\n                            <Table.HeaderCell key={index}>{header}</Table.HeaderCell>\r\n                        );\r\n                    })}\r\n                </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n                {props.rows.map((row, index) => {\r\n                    return (\r\n                        <Table.Row key={index}>\r\n                            {row.map((r, index) => {\r\n                                return (\r\n                                    <Table.Cell key={index}>{r}</Table.Cell>\r\n                                );\r\n                            })}\r\n                        </Table.Row>\r\n                    );\r\n                })}\r\n            </Table.Body>\r\n        </Table>          \r\n    </div>\r\n);\r\n\r\nexport default UITable;","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { Container, Header, Segment, Grid, Divider } from 'semantic-ui-react';\r\nimport AboutImageCard from '../../components/About/ImageCard';\r\nimport UITable from '../../components/UI/Table';\r\nimport './About.css';\r\n\r\nconst experienceHeaders = [\"Company\", \"Period\", \"Position\"];\r\nconst experienceRows = [\r\n    [\"Software Design Solutions\", \"May 2016 - Present\", \"Software Engineer\"],\r\n    [\"Epsilon\", \"July 2015 - May 2016\", \"Software Developer\"]\r\n];\r\nconst educationHeaders = [\"Degree\", \"University\"];\r\nconst educationRows = [\r\n    [\"Mathematics and Computer Science (B.S.)\", \"Xavier University\"]\r\n];\r\nconst skillsHeaders = [];\r\nconst skillsRows = [\r\n    [\"C#\"], [\"SQL / Oracle\"], [\"HTML / CSS / JS\"], [\"ASP.NET / Web API 2 / MVC\"], [\"Windows Forms\"], [\"WPF / XAML\"], [\"React / NodeJS\"], [\"Agile / JIRA\"]\r\n];\r\n\r\nconst ScreensAbout = () => (\r\n    <Segment inverted vertical className=\"About-segment\">\r\n        {/* Defining the Page title, meta, description */}\r\n        <Helmet>\r\n            <title>Matt Jones Creations - About</title>\r\n            <meta name=\"description\" content=\"About Page for Software Engineer Matt Jones.\" />\r\n            <meta name=\"subject\" content=\"About\" />\r\n        </Helmet>\r\n        <Container>\r\n            <Grid inverted stackable>\r\n                <Grid.Row>\r\n                    <Grid.Column width={16}>\r\n                        <Header inverted as=\"h1\">About</Header>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <Grid.Column width={6}>\r\n                        <AboutImageCard />     \r\n                    </Grid.Column>   \r\n                    <Grid.Column width={8} className=\"About-intro\">\r\n                        <p>\r\n                            I've been working as a Software Engineer for the past 3.5 years. Last year I was\r\n                            promoted to team lead at Software Design Solutions. Although not much has changed, I still am \r\n                            actively working as a Full Stack Developer and pride myself on providing real-world solutions to complex technical problems.\r\n                        </p>\r\n                        <p>\r\n                            I graduated from Xavier University with degrees in Mathematics and Computer Science. \r\n                            At Xavier University, I graduated as Magna Cum Laude while obtaining a 4.0 in Computer Science \r\n                            related classes and making Deans list every semester. I pride myself on always bringing out the \r\n                            best in my colleagues and I am able to do this because of the impact sports have had on my life.\r\n                        </p>\r\n                        <p>\r\n                            Initially, I chose to go to Xavier University as an undecided major to play baseball at a \r\n                            collegiate level. After a couple of injuries I had to give up baseball but the lessons I \r\n                            learned have impacted my life immensely. I learned skills that emphasized teamwork, leadership, \r\n                            and time management. All of these help me to work well with others and being a great problem\r\n                            solver. My senior year I was given The Richard J. Wehrmeyer Pi Mu Epsilon Award for\r\n                            a Mathematics major exhibiting excellence in problem solving.\r\n                        </p>\r\n                    </Grid.Column>                                            \r\n                </Grid.Row>\r\n                <Divider />\r\n                <Grid.Row>\r\n                    <Grid.Column width={6}>\r\n                        <UITable headers={experienceHeaders} rows={experienceRows} title={\"Experience\"} />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6}>\r\n                        <UITable headers={educationHeaders} rows={educationRows} title={\"Education\"} />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <UITable headers={skillsHeaders} rows={skillsRows} title={\"Technical Skills\"} />\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>         \r\n        </Container>\r\n    </Segment>\r\n);\r\n\r\nexport default ScreensAbout;","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { Segment, Container, Grid, Header } from 'semantic-ui-react';\r\nimport './Contact.css';\r\n\r\nconst ScreensContact = () => (\r\n    <Segment inverted vertical className=\"Contact-segment\">\r\n        {/* Defining the Page title, meta, description */}\r\n        <Helmet>\r\n            <title>Matt Jones Creations - Contact</title>\r\n            <meta name=\"description\" content=\"Contact Page for Software Engineer Matt Jones.\" />\r\n            <meta name=\"subject\" content=\"Contact\" />\r\n        </Helmet>\r\n        <Container>\r\n            <Grid inverted stackable>\r\n                <Grid.Row>\r\n                    <Grid.Column width={16}>\r\n                        <Header inverted as=\"h1\">Contact</Header>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <Grid.Column width={16} className=\"Contact-contactinfo\">\r\n                        <blockquote>\r\n                            <p>\r\n                                Feel free to reach out with any questions or inquiries, technical or otherwise.\r\n                                Please do not send spam or try to advertise any services to me.\r\n                            </p>\r\n                        </blockquote>\r\n                        <Header inverted as=\"h3\">Email</Header>\r\n                        <p><a href=\"mailto:jonesm33@xavier.edu\">jonesm33@xavier.edu</a></p>\r\n                        <Header inverted as=\"h3\">LinkedIn</Header>\r\n                        <p><a href=\"https://www.linkedin.com/in/MattJonesCreation/\">linkedin.com/in/MattJonesCreation</a></p>\r\n                        <Header inverted as=\"h3\">Github</Header>\r\n                        <p><a href=\"https://github.com/MattJonesCreation\">github.com/MattJonesCreation</a></p>\r\n                    </Grid.Column>                                            \r\n                </Grid.Row>\r\n            </Grid>\r\n        </Container>\r\n    </Segment>\r\n);\r\n\r\nexport default ScreensContact;","// utils/GoogleAnalytics.js\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactGA from 'react-ga';\r\nimport { Route } from 'react-router-dom';\r\n\r\nclass GoogleAnalytics extends Component {\r\n    componentDidMount () {\r\n        this.logPageChange(\r\n            this.props.location.pathname,\r\n            this.props.location.search\r\n        );\r\n    }\r\n\r\n    componentDidUpdate ({ location: prevLocation }) {\r\n        const { location: { pathname, search } } = this.props;\r\n        const isDifferentPathname = pathname !== prevLocation.pathname;\r\n        const isDifferentSearch = search !== prevLocation.search;\r\n\r\n        if (isDifferentPathname || isDifferentSearch) {\r\n            this.logPageChange(pathname, search);\r\n        }\r\n    }\r\n\r\n    logPageChange (pathname, search = '') {\r\n        const page = pathname + search;\r\n        const { location } = window;\r\n        ReactGA.set({\r\n            page,\r\n            location: `${location.origin}${page}`,\r\n            ...this.props.options\r\n        });\r\n        ReactGA.pageview(page);\r\n    }\r\n\r\n    render () {\r\n        return null;\r\n    }\r\n}\r\n\r\nGoogleAnalytics.propTypes = {\r\n    location: PropTypes.shape({\r\n        pathname: PropTypes.string,\r\n        search: PropTypes.string\r\n    }).isRequired,\r\n    options: PropTypes.object\r\n};\r\n\r\nconst RouteTracker = () => <Route component={GoogleAnalytics} />;\r\n\r\nconst init = (options = {}) => {\r\n    const isGAEnabled = process.env.NODE_ENV === 'production';\r\n\r\n    if (isGAEnabled) {\r\n        ReactGA.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS);\r\n    }\r\n\r\n    return isGAEnabled;\r\n};\r\n\r\nexport default {\r\n    GoogleAnalytics,\r\n    RouteTracker,\r\n    init\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { Button, Container, Grid, Header, Icon, Menu, Responsive, Segment, Sidebar, Visibility } from 'semantic-ui-react';\r\nimport logo from '../images/favicons/favicon.ico';\r\n\r\n// Heads up!\r\n// We using React Static to prerender our docs with server side rendering, this is a quite simple solution.\r\n// For more advanced usage please check Responsive docs under the \"Usage\" section.\r\nconst getWidth = () => {\r\n    const isSSR = typeof window === 'undefined';\r\n  \r\n    return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\r\n};\r\n\r\nconst Nav = props => (\r\n\t<NavLink\r\n\t\texact\r\n\t\t{...props}\r\n\t\tactiveClassName=\"active\"\r\n\t/>\r\n);\r\n\r\nclass Pages extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Menu.Item as={Nav} to=\"/\" name=\"home\" position='right' onClick={this.props.onClick}>\r\n                    <Icon name='home' />\r\n                    Home\r\n                </Menu.Item>\r\n                <Menu.Item as={Nav} to=\"/projects\" name=\"projects\" onClick={this.props.onClick}>\r\n                    <Icon name='briefcase' />\r\n                    Projects\r\n                </Menu.Item>\r\n                <Menu.Item href=\"https://medium.com/brownbag\" target='_blank'>\r\n                    <Icon name='external alternate' />\r\n                    Articles\r\n                </Menu.Item>\r\n                <Menu.Item as={Nav} to=\"/about\" name=\"about\" onClick={this.props.onClick}>\r\n                    <Icon name='info' />\r\n                    About\r\n                </Menu.Item>\r\n                <Menu.Item as={Nav} to=\"/contact\" name=\"contact\" onClick={this.props.onClick}>\r\n                    <Icon name='address book' />\r\n                    Contact\r\n                </Menu.Item>\r\n            </React.Fragment>\r\n        );\r\n    } \r\n};\r\n  \r\n/* Heads up!\r\n* Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\r\n* It can be more complicated, but you can create really flexible markup.\r\n*/\r\nclass DesktopContainer extends Component {   \r\n    render() {\r\n        const { children } = this.props;\r\n\r\n        return (\r\n            <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\r\n                <Visibility>\r\n                    <Segment inverted textAlign='center' style={{ padding: '1em 0em' }} vertical>\r\n                        <Menu inverted={true} secondary={true} size='large'>\r\n                            <Container>\r\n                                <Menu.Item as={Link} to=\"/\" name='home'><img src={logo} alt=\"logo\"/></Menu.Item>\r\n                                <Pages />\r\n                            </Container>\r\n                        </Menu>\r\n                    </Segment>\r\n                </Visibility> \r\n                {children}\r\n            </Responsive>\r\n        );\r\n    }\r\n}\r\n  \r\nDesktopContainer.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n  \r\nclass MobileContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = { \r\n            sidebarOpened: false \r\n        }; \r\n    }\r\n\r\n    handleSidebarHide = () => this.setState({ sidebarOpened: false })\r\n\r\n    handleSidebarShow = () => this.setState({ sidebarOpened: true })\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n        const { sidebarOpened } = this.state;\r\n\r\n        return (\r\n            <Responsive as={Sidebar.Pushable} getWidth={getWidth} maxWidth={Responsive.onlyMobile.maxWidth}>\r\n                <Sidebar as={Menu} animation='overlay' direction='right' inverted onHide={this.handleSidebarHide} vertical visible={sidebarOpened}>\r\n                    <Header style={{ padding: '1em 0em .5em 1em' }} inverted={true} as='h3'>\r\n                        Menu\r\n                        <Icon style={{ float: 'right' }} name='close' link onClick={this.handleSidebarHide} />\r\n                    </Header>\r\n                    <Pages onClick={this.handleSidebarHide} />\r\n                </Sidebar>\r\n\r\n                <Sidebar.Pusher dimmed={sidebarOpened}>\r\n                    <Segment inverted textAlign='center' style={{ padding: '1em 0em' }} vertical>\r\n                        <Container>\r\n                        <Menu inverted={true} secondary={true} size='large'>\r\n                            <Menu.Item as={Link} to=\"/\" name='home'><img src={logo} alt=\"logo\"/></Menu.Item>\r\n                            <Menu.Item position='right'>\r\n                                <Button inverted={true} onClick={this.handleSidebarShow}>                                        \r\n                                    <Icon name='sidebar' />\r\n                                    Menu                                       \r\n                                </Button>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                        </Container>\r\n                    </Segment>\r\n                    {children}\r\n                </Sidebar.Pusher>\r\n            </Responsive>\r\n        );\r\n    }\r\n}\r\n  \r\nMobileContainer.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nconst ResponsiveContainer = ({ children }) => (\r\n    <div>\r\n        <DesktopContainer>{children}</DesktopContainer>\r\n        <MobileContainer>{children}</MobileContainer>\r\n    </div>\r\n);\r\n  \r\nResponsiveContainer.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\n\r\nconst HomepageLayout = ({ children }) => (\r\n    <ResponsiveContainer>\r\n        {children}\r\n\r\n        {/* Footer */}\r\n        <Segment inverted vertical style={{ padding: '2em 0em 1em 0em' }}>\r\n            <Container>\r\n                <Grid divided inverted stackable>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={13}>\r\n                            <p>\r\n                                <a href=\"https://github.com/MattJonesCreation/mattjonescreation.github.io/blob/source/LICENSE\">\r\n                                    All content is copyright © {new Date().getFullYear()} Matt Jones, any trademarks are property of their respective owners\r\n                                </a>\r\n                            </p>                          \r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Container>\r\n        </Segment>\r\n    </ResponsiveContainer>\r\n);\r\n\r\nexport default HomepageLayout;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport ScreensHome from './Home/Home';\r\nimport ScreensProjects from './Projects/Projects';\r\nimport ScreensAbout from './About/About';\r\nimport ScreensContact from './Contact/Contact';\r\n\r\nimport GA from '../components/GoogleAnalytics';\r\nimport HomepageLayout from '../components/HomepageLayout';\r\n\r\nconst ScreensRoot = () => (\r\n    <Router>\r\n        {/* Initialize Google Analytics and managing document title, description, and meta */}\r\n        { GA.init() && <GA.RouteTracker /> }\r\n        <HomepageLayout> \r\n            {/* Main Content Routing Pages */}\r\n            <Switch>\r\n                <Route path=\"/\" exact component={ScreensHome} />\r\n                <Route path=\"/projects/\" component={ScreensProjects} />\r\n                <Route path=\"/about/\" component={ScreensAbout} />\r\n                <Route path=\"/contact/\" component={ScreensContact} />\r\n            </Switch>  \r\n        </HomepageLayout>    \r\n    </Router>\r\n);\r\n\r\nexport default ScreensRoot;","import React from 'react';\r\nimport ScreensRoot from './screens/Root';\r\nimport './App.css';\r\n\r\nconst App = () => (\r\n    <ScreensRoot />\r\n);\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-snapshot';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nrender(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}